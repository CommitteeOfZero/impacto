jobs:
- job: win_x64_build
  displayName: Windows x64 Build

  pool:
    vmImage: 'windows-2019'

  steps:
  - task: Cache@2
    displayName: Cache vcpkg packages
    inputs:
      key: 'vcpkg-deps'
      path: 'C:/vcpkg/installed'
  - task: Cache@2
    displayName: Cache LibAtrac9
    inputs:
      key: 'libatrac9'
      path: '$(Build.Repository.LocalPath)/vendor/LibAtrac9'
  - task: PowerShell@2
    displayName: Build dependencies
    inputs:
      filePath: 'build-deps.ps1'
      errorActionPreference: 'silentlyContinue'
  - task: run-cmake@0
    displayName: CMake build
    inputs:
      cmakeListsOrSettingsJson: 'CMakeListsTxtBasic'
      cmakeToolchainPath: 'C:/vcpkg/scripts/buildsystems/vcpkg.cmake'
      cmakeBuildType: 'Release'
      cmakeGenerator: 'VS16Win64'
      buildDirectory: '$(Build.ArtifactStagingDirectory)/out/build'
      buildWithCMakeArgs: '--config Release --target install'
  
  - task: CopyFiles@2
    displayName: Copy dlls
    inputs:
      SourceFolder: 'C:/Program Files/impacto/Release'
      Contents: '**'
      TargetFolder: 'C:/Program Files/impacto'
  - task: DeleteFiles@1
    displayName: Remove leftovers
    inputs:
      SourceFolder: 'C:/Program Files/impacto/Release'
      Contents: '**'
      RemoveSourceFolder: true
  - task: DeleteFiles@1
    displayName: Remove leftovers
    inputs:
      SourceFolder: 'C:/Program Files/impacto/impacto.dir'
      Contents: '**'
      RemoveSourceFolder: true
  - task: DeleteFiles@1
    displayName: Remove leftovers
    inputs:
      SourceFolder: 'C:/Program Files/impacto/x64'
      Contents: '**'
      RemoveSourceFolder: true
  - task: ArchiveFiles@2
    displayName: Archive artifact
    inputs:
      rootFolderOrFile: 'C:/Program Files/impacto'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/impacto-win-x64-$(version)-$(Build.SourceVersion).zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/impacto-win-x64-$(version)-$(Build.SourceVersion).zip'
      ArtifactName: 'release'
      publishLocation: 'Container'

- job: linux_x64_build
  displayName: Linux x64 Build

  pool:
    vmImage: 'ubuntu-18.04'
  
  steps:
  - script: |
      sudo apt-get -y update
      sudo apt-get -y install libsdl2-dev libopenal-dev libogg-dev libvorbis-dev libavdevice-dev libavfilter-dev libavformat-dev libavcodec-dev libswscale-dev libswresample-dev libavresample-dev libavutil-dev
      sudo sed -i -e 's/-lSDL2 /-lSDL2/g' /usr/lib/x86_64-linux-gnu/cmake/SDL2/sdl2-config.cmake
      dpkg -l | grep sdl
      pushd vendor
      git clone https://github.com/Thealexbarney/LibAtrac9.git --depth 1
      cd LibAtrac9/C && make
      mkdir -p ../include/libatrac9
      mkdir -p ../libs
      cp bin/libatrac9.a ../libs/
      cp src/libatrac9.h ../include/libatrac9/
      popd
      pushd vendor
      git clone -b "0.9.9.3" https://github.com/g-truc/glm.git --depth 1
      cd glm
      cmake -DGLM_TEST_ENABLE=false .
      make -j2
      popd
      LIBATRAC9DIR=vendor/LibAtrac9 cmake .
      make -j2
  - task: CopyFiles@2
    displayName: Copy artifact
    inputs:
      Contents: |
        impacto
        profiles/**/*
        games/**/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)/impacto'
  - task: CopyFiles@2
    displayName: Copy artifact
    inputs:
      SourceFolder: 'src'
      Contents: 'shaders/**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/impacto'
  - task: ArchiveFiles@2
    displayName: Archive artifact
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/impacto'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/impacto-linux-$(version)-$(Build.SourceVersion).zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/impacto-linux-$(version)-$(Build.SourceVersion).zip'
      ArtifactName: 'release'
      publishLocation: 'Container'

- job: macos_build
  displayName: macOS Build

  pool:
    vmImage: 'macOS-latest'
  
  steps:
  - script: |
      brew install openal-soft sdl2 glm ffmpeg
      pushd vendor
      git clone https://github.com/Thealexbarney/LibAtrac9.git --depth 1
      cd LibAtrac9/C && make
      mkdir -p ../include/libatrac9
      mkdir -p ../libs
      cp bin/libatrac9.a ../libs/
      cp src/libatrac9.h ../include/libatrac9/
      popd
      LIBATRAC9DIR=vendor/LibAtrac9 cmake -DOPENAL_LIBRARY=/usr/local/opt/openal-soft/lib/libopenal.dylib -DOPENAL_INCLUDE_DIR=/usr/local/opt/openal-soft/include/AL .
      make -j2
  - task: CopyFiles@2
    displayName: Copy artifact
    inputs:
      Contents: |
        impacto
        profiles/**/*
        games/**/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)/impacto'
  - task: CopyFiles@2
    displayName: Copy artifact
    inputs:
      SourceFolder: 'src'
      Contents: 'shaders/**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/impacto'
  - task: ArchiveFiles@2
    displayName: Archive artifact
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/impacto'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/impacto-macos-$(version)-$(Build.SourceVersion).zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/impacto-macos-$(version)-$(Build.SourceVersion).zip'
      ArtifactName: 'release'
      publishLocation: 'Container'

- job: switch_build
  displayName: Switch Build

  pool:
    name: 'SwitchBuild'
  
  steps:
  - script: |
      cmake . -DCMAKE_TOOLCHAIN_FILE=HorizonNX.toolchain
      make
      elf2nro impacto impacto.nro
  - task: CopyFiles@2
    displayName: Copy artifact
    inputs:
      Contents: |
        impacto.nro
        profiles/**/*
        games/**/*
      TargetFolder: '$(Build.ArtifactStagingDirectory)/impacto'
  - task: CopyFiles@2
    displayName: Copy artifact
    inputs:
      SourceFolder: 'src'
      Contents: 'shaders/**/*'
      TargetFolder: '$(Build.ArtifactStagingDirectory)/impacto'
  - task: ArchiveFiles@2
    displayName: Archive artifact
    inputs:
      rootFolderOrFile: '$(Build.ArtifactStagingDirectory)/impacto'
      includeRootFolder: true
      archiveType: 'zip'
      archiveFile: '$(Build.ArtifactStagingDirectory)/impacto-switch-$(version)-$(Build.SourceVersion).zip'
      replaceExistingArchive: true
  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)/impacto-switch-$(version)-$(Build.SourceVersion).zip'
      ArtifactName: 'release'
      publishLocation: 'Container'

- job: publish_artifacts
  displayName: Publish Artifacts
  dependsOn: 
  - win_x64_build
  - linux_x64_build
  - macos_build
  - switch_build
  condition: succeeded()

  pool:
    vmImage: 'ubuntu-18.04'
  
  steps:
  - task: DownloadBuildArtifacts@0
    inputs:
      buildType: 'current'
      downloadType: 'single'
      artifactName: 'release'
      downloadPath: '$(System.ArtifactsDirectory)'
  - task: GitHubRelease@1
    inputs:
      gitHubConnection: 'github'
      repositoryName: 'CommitteeOfZero/impacto'
      action: 'create'
      target: '$(Build.SourceVersion)'
      tagSource: 'userSpecifiedTag'
      tag: '$(version)'
      title: 'Latest $(Build.SourceBranchName) build'
      releaseNotesSource: 'inline'
      assets: '$(System.ArtifactsDirectory)/release/*.zip'
      isPreRelease: true
      addChangeLog: false
  - powershell: |
      $gituser=$(git log -1 --pretty=format:'%an')
      Write-Host "Setting up the date time for build variable"
      $date=$(Get-Date -Format o)
      Write-Host "##vso[task.setvariable variable=timestamp]$date"
      Write-Host "##vso[task.setvariable variable=commitAuthor]$gituser"
    displayName: 'PowerShell Script'
  - task: ado-discord-webhook@1
    inputs:
      channelId: $(discordChannelId)
      webhookKey: $(discordWebhookKey)
      name: 'IMPACTO'
      avatar: 'https://cdn.discordapp.com/emojis/766988033127481344.png'
      messageType: 'embeds'
      embeds: |
          [{
          "title": "$(commitAuthor)",
          "description": "Commit\n`$(Build.SourceVersionMessage) ($(Build.SourceVersion))`\nfrom branch `$(Build.SourceBranchName)` has been successfully built.\n\nRelease URL:\nhttps://github.com/CommitteeOfZero/impacto/releases/tag/$(version)\n\nDetails:\n$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=results",
          "color": 3659647,
          "timestamp": "$(timestamp)"
          }]

- job: notify_fail
  displayName: Notify failure
  dependsOn:
  - win_x64_build
  - linux_x64_build
  - macos_build
  - switch_build
  variables:
    winBuildStatus: $[ dependencies.win_x64_build.result ]
    linuxBuildStatus: $[ dependencies.linux_x64_build.result ]
    macOSBuildStatus: $[ dependencies.macos_build.result ]
    switchBuildStatus: $[ dependencies.switch_build.result ]
  condition: |
    or
    (
      in(dependencies.win_x64_build.result, 'Failed', 'Canceled'),
      in(dependencies.linux_x64_build.result, 'Failed', 'Canceled'),
      in(dependencies.macos_build.result, 'Failed', 'Canceled'),
      in(dependencies.switch_build.result, 'Failed', 'Canceled')
    )

  pool:
    vmImage: 'ubuntu-18.04'
  
  steps:
  - powershell: |
      $gituser=$(git log -1 --pretty=format:'%an')
      Write-Host "Setting up the date time for build variable"
      $date=$(Get-Date -Format o)
      Write-Host "##vso[task.setvariable variable=timestamp]$date"
      Write-Host "##vso[task.setvariable variable=commitAuthor]$gituser"
    displayName: 'PowerShell Script'
  - task: ado-discord-webhook@1
    inputs:
      channelId: $(discordChannelId)
      webhookKey: $(discordWebhookKey)
      name: 'IMPACTO'
      avatar: 'https://cdn.discordapp.com/emojis/766988033127481344.png'
      messageType: 'embeds'
      embeds: |
          [{
          "title": "$(commitAuthor)",
          "description": "Commit\n`$(Build.SourceVersionMessage) ($(Build.SourceVersion))`\nfrom branch `$(Build.SourceBranchName)` has failed build.\n\nJob status:\nwin_x64_build: $(winBuildStatus)\nlinux_x64_build: $(linuxBuildStatus)\nmacos_build: $(macOSBuildStatus)\nswitch_build: $(switchBuildStatus)\n\nDetails:\n$(System.CollectionUri)$(System.TeamProject)/_build/results?buildId=$(Build.BuildId)&view=results",
          "color": 16711680,
          "timestamp": "$(timestamp)"
          }]
